package com.nightfall.awesomerogue;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

public class InGameState extends GameState {
	public static final int INGAME_WINDOW_OFFSET_X = 25;	// In pixels, not cells
	public static final int INGAME_WINDOW_OFFSET_Y = 25;	// In pixels, not cells
	public static final int INGAME_WINDOW_WIDTH = 60;		// In cells, not pixels
	public static final int INGAME_WINDOW_HEIGHT = 40;		// In cells, not pixels
	
	private Tile[][] map;
	
	private class Tile {
		public boolean blocker = false;
		public BufferedImage image;
		public Tile(BufferedImage img) {
			image = img;
		}
	
		public void doAction() {
			
		}
	}
	
	public InGameState(GamePanel parentPanel) {
		super(parentPanel);

		initLevel(1);
	}

	public void update() {
	}

	public void render(Graphics2D g2) {
		g2.setColor(Color.white);
		
		// Draw the map in the viewing window
		for(int i = 0; i < INGAME_WINDOW_WIDTH; i ++) {
			for(int j = 0; j < INGAME_WINDOW_HEIGHT; j ++) {
				g2.drawImage(map[i][j].image, i*12+INGAME_WINDOW_OFFSET_X,
													j*12+INGAME_WINDOW_OFFSET_Y, null);
			}
		}
	}

	public void keyPress(KeyEvent e) {
		
	}

	private void initLevel(int levelNum) {
		map = new Tile[60][40];
		for(int i = 0; i < map.length; i ++) {
			for(int j = 0; j < map[0].length; j ++) {
				map[i][j] = new Tile(tileImages[0]);
			}
		}
	}
}
